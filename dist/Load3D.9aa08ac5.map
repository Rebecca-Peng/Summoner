{"version":3,"sources":["Load3D.js"],"names":["container","document","createElement","body","appendChild","camera","THREE","PerspectiveCamera","window","innerWidth","innerHeight","position","z","scene","Scene","fog","FogExp2","geometry","Geometry","i","vertex","Vector3","x","Math","random","y","vertices","push","material","ParticleBasicMaterial","size","particles","ParticleSystem","rotation","add","renderer","WebGLRenderer","setSize","domElement","render","requestAnimationFrame","children","length","object","addEventListener","onWindowResize","aspect","updateProjectionMatrix"],"mappings":"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","file":"Load3D.9aa08ac5.map","sourceRoot":"..","sourcesContent":["//threejs - demo - https://threejs.org/examples/webgl_particles_random.html\nvar container = document.createElement('div');\ndocument.body.appendChild( container );\n\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight,1, 3000)\ncamera.position.z = 1000; //pull this back to 2000 to see what is actually going on\n\nvar scene = new THREE.Scene();\nscene.fog = new THREE.FogExp2( 0x0000F0, 0.0009 );  //color of fog - objects are all white\nvar geometry = new THREE.Geometry();\n\nfor (i = 0; i < 20000; i ++) //total objects within each particle object\n{ //-1000 is for centering on screen, span would be -1000 to 1000\n  var vertex = new THREE.Vector3();\n  vertex.x = Math.random()*2000-1000;\n  vertex.y = Math.random()*2000-1000;\n  vertex.z = Math.random()*2000-1000;\n  geometry.vertices.push( vertex );\n}\n\n\n//repeating similar code for each \"Particle object\" I want --- can add for loop\nvar material = new THREE.ParticleBasicMaterial( { size: 4 });\n\n\nvar particles = new THREE.ParticleSystem( geometry, material );\n          particles.rotation.x = Math.random() * 6;\n          particles.rotation.y = Math.random() * 6;\n          particles.rotation.z = Math.random() * 6;\nscene.add( particles ); \n\n\n material = new THREE.ParticleBasicMaterial( { size: 3 });\n\n\nvar particles = new THREE.ParticleSystem( geometry, material );\n          particles.rotation.x = Math.random() * 6;\n          particles.rotation.y = Math.random() * 6;\n          particles.rotation.z = Math.random() * 6;\nscene.add( particles ); \n\n\n material = new THREE.ParticleBasicMaterial( { size: 5 });\n\n\nvar particles = new THREE.ParticleSystem( geometry, material );\n          particles.rotation.x = Math.random() * 6;\n          particles.rotation.y = Math.random() * 6;\n          particles.rotation.z = Math.random() * 6;\nscene.add( particles ); \n\n material = new THREE.ParticleBasicMaterial( { size: 5 });\n\n\nvar particles = new THREE.ParticleSystem( geometry, material );\n          particles.rotation.x = Math.random() * 6;\n          particles.rotation.y = Math.random() * 6;\n          particles.rotation.z = Math.random() * 6;\nscene.add( particles ); \n material = new THREE.ParticleBasicMaterial( { size: 5 });\n\n\nvar particles = new THREE.ParticleSystem( geometry, material );\n          particles.rotation.x = Math.random() * 6;\n          particles.rotation.y = Math.random() * 6;\n          particles.rotation.z = Math.random() * 6;\nscene.add( particles ); \n material = new THREE.ParticleBasicMaterial( { size: 5 });\n\n\nvar particles = new THREE.ParticleSystem( geometry, material );\n          particles.rotation.x = Math.random() * 6;\n          particles.rotation.y = Math.random() * 6;\n          particles.rotation.z = Math.random() * 6;\nscene.add( particles ); \n////////////////////////////////////////////////////////////////\n\n\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ncontainer.appendChild( renderer.domElement );\n\nrenderer.render( scene, camera );\n\nrender();\n\n      function render() {\n        requestAnimationFrame( render );\n        \n\n        for ( i = 0; i < scene.children.length; i ++ ) {\n\n          var object = scene.children[ i ];\n\n          if ( object instanceof THREE.ParticleSystem ) {\n\n            object.rotation.y += .0035;\n\n          }\n\n        }\n\n        renderer.render( scene, camera );\n\n      }\n\n\nwindow.addEventListener( 'resize', onWindowResize, false );\n\nfunction onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize( window.innerWidth, window.innerHeight );\n\n      }"]}